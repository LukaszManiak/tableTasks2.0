/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TableIndexImport } from './routes/table/index'
import { Route as TableAddTableIndexImport } from './routes/table/addTable/index'
import { Route as TableTableIdIndexImport } from './routes/table/$tableId/index'
import { Route as TableTableIdEditImport } from './routes/table/$tableId/edit'
import { Route as TableTableIdAddTaskIndexImport } from './routes/table/$tableId/addTask/index'
import { Route as TableTableIdTaskIdIndexImport } from './routes/table/$tableId/$taskId/index'
import { Route as TableTableIdTaskIdEditImport } from './routes/table/$tableId/$taskId/edit'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TableIndexRoute = TableIndexImport.update({
  id: '/table/',
  path: '/table/',
  getParentRoute: () => rootRoute,
} as any)

const TableAddTableIndexRoute = TableAddTableIndexImport.update({
  id: '/table/addTable/',
  path: '/table/addTable/',
  getParentRoute: () => rootRoute,
} as any)

const TableTableIdIndexRoute = TableTableIdIndexImport.update({
  id: '/table/$tableId/',
  path: '/table/$tableId/',
  getParentRoute: () => rootRoute,
} as any)

const TableTableIdEditRoute = TableTableIdEditImport.update({
  id: '/table/$tableId/edit',
  path: '/table/$tableId/edit',
  getParentRoute: () => rootRoute,
} as any)

const TableTableIdAddTaskIndexRoute = TableTableIdAddTaskIndexImport.update({
  id: '/table/$tableId/addTask/',
  path: '/table/$tableId/addTask/',
  getParentRoute: () => rootRoute,
} as any)

const TableTableIdTaskIdIndexRoute = TableTableIdTaskIdIndexImport.update({
  id: '/table/$tableId/$taskId/',
  path: '/table/$tableId/$taskId/',
  getParentRoute: () => rootRoute,
} as any)

const TableTableIdTaskIdEditRoute = TableTableIdTaskIdEditImport.update({
  id: '/table/$tableId/$taskId/edit',
  path: '/table/$tableId/$taskId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/table/': {
      id: '/table/'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableIndexImport
      parentRoute: typeof rootRoute
    }
    '/table/$tableId/edit': {
      id: '/table/$tableId/edit'
      path: '/table/$tableId/edit'
      fullPath: '/table/$tableId/edit'
      preLoaderRoute: typeof TableTableIdEditImport
      parentRoute: typeof rootRoute
    }
    '/table/$tableId/': {
      id: '/table/$tableId/'
      path: '/table/$tableId'
      fullPath: '/table/$tableId'
      preLoaderRoute: typeof TableTableIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/table/addTable/': {
      id: '/table/addTable/'
      path: '/table/addTable'
      fullPath: '/table/addTable'
      preLoaderRoute: typeof TableAddTableIndexImport
      parentRoute: typeof rootRoute
    }
    '/table/$tableId/$taskId/edit': {
      id: '/table/$tableId/$taskId/edit'
      path: '/table/$tableId/$taskId/edit'
      fullPath: '/table/$tableId/$taskId/edit'
      preLoaderRoute: typeof TableTableIdTaskIdEditImport
      parentRoute: typeof rootRoute
    }
    '/table/$tableId/$taskId/': {
      id: '/table/$tableId/$taskId/'
      path: '/table/$tableId/$taskId'
      fullPath: '/table/$tableId/$taskId'
      preLoaderRoute: typeof TableTableIdTaskIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/table/$tableId/addTask/': {
      id: '/table/$tableId/addTask/'
      path: '/table/$tableId/addTask'
      fullPath: '/table/$tableId/addTask'
      preLoaderRoute: typeof TableTableIdAddTaskIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/table': typeof TableIndexRoute
  '/table/$tableId/edit': typeof TableTableIdEditRoute
  '/table/$tableId': typeof TableTableIdIndexRoute
  '/table/addTable': typeof TableAddTableIndexRoute
  '/table/$tableId/$taskId/edit': typeof TableTableIdTaskIdEditRoute
  '/table/$tableId/$taskId': typeof TableTableIdTaskIdIndexRoute
  '/table/$tableId/addTask': typeof TableTableIdAddTaskIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/table': typeof TableIndexRoute
  '/table/$tableId/edit': typeof TableTableIdEditRoute
  '/table/$tableId': typeof TableTableIdIndexRoute
  '/table/addTable': typeof TableAddTableIndexRoute
  '/table/$tableId/$taskId/edit': typeof TableTableIdTaskIdEditRoute
  '/table/$tableId/$taskId': typeof TableTableIdTaskIdIndexRoute
  '/table/$tableId/addTask': typeof TableTableIdAddTaskIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/table/': typeof TableIndexRoute
  '/table/$tableId/edit': typeof TableTableIdEditRoute
  '/table/$tableId/': typeof TableTableIdIndexRoute
  '/table/addTable/': typeof TableAddTableIndexRoute
  '/table/$tableId/$taskId/edit': typeof TableTableIdTaskIdEditRoute
  '/table/$tableId/$taskId/': typeof TableTableIdTaskIdIndexRoute
  '/table/$tableId/addTask/': typeof TableTableIdAddTaskIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/table'
    | '/table/$tableId/edit'
    | '/table/$tableId'
    | '/table/addTable'
    | '/table/$tableId/$taskId/edit'
    | '/table/$tableId/$taskId'
    | '/table/$tableId/addTask'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/table'
    | '/table/$tableId/edit'
    | '/table/$tableId'
    | '/table/addTable'
    | '/table/$tableId/$taskId/edit'
    | '/table/$tableId/$taskId'
    | '/table/$tableId/addTask'
  id:
    | '__root__'
    | '/'
    | '/table/'
    | '/table/$tableId/edit'
    | '/table/$tableId/'
    | '/table/addTable/'
    | '/table/$tableId/$taskId/edit'
    | '/table/$tableId/$taskId/'
    | '/table/$tableId/addTask/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TableIndexRoute: typeof TableIndexRoute
  TableTableIdEditRoute: typeof TableTableIdEditRoute
  TableTableIdIndexRoute: typeof TableTableIdIndexRoute
  TableAddTableIndexRoute: typeof TableAddTableIndexRoute
  TableTableIdTaskIdEditRoute: typeof TableTableIdTaskIdEditRoute
  TableTableIdTaskIdIndexRoute: typeof TableTableIdTaskIdIndexRoute
  TableTableIdAddTaskIndexRoute: typeof TableTableIdAddTaskIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TableIndexRoute: TableIndexRoute,
  TableTableIdEditRoute: TableTableIdEditRoute,
  TableTableIdIndexRoute: TableTableIdIndexRoute,
  TableAddTableIndexRoute: TableAddTableIndexRoute,
  TableTableIdTaskIdEditRoute: TableTableIdTaskIdEditRoute,
  TableTableIdTaskIdIndexRoute: TableTableIdTaskIdIndexRoute,
  TableTableIdAddTaskIndexRoute: TableTableIdAddTaskIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/table/",
        "/table/$tableId/edit",
        "/table/$tableId/",
        "/table/addTable/",
        "/table/$tableId/$taskId/edit",
        "/table/$tableId/$taskId/",
        "/table/$tableId/addTask/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/table/": {
      "filePath": "table/index.tsx"
    },
    "/table/$tableId/edit": {
      "filePath": "table/$tableId/edit.tsx"
    },
    "/table/$tableId/": {
      "filePath": "table/$tableId/index.tsx"
    },
    "/table/addTable/": {
      "filePath": "table/addTable/index.tsx"
    },
    "/table/$tableId/$taskId/edit": {
      "filePath": "table/$tableId/$taskId/edit.tsx"
    },
    "/table/$tableId/$taskId/": {
      "filePath": "table/$tableId/$taskId/index.tsx"
    },
    "/table/$tableId/addTask/": {
      "filePath": "table/$tableId/addTask/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
